@model demo.smart_school.Models.LoginModel
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

<link href="~/sweetAlert/sweetalert.css" rel="stylesheet" />
<script src="~/sweetAlert/sweetalert.min.js"></script>
<div style="margin-top:15%">
@Html.Raw(TempData["msg"])
<div class="container-fluid">
    @*<div class="page-titles">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active"><a href="/Admin/Index">Home</a></li>
                <li class="breadcrumb-item"><a href="javascript:void(0)">User Master</a></li>
            </ol>
        </div>*@
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <h1 class="card-title mb-0 text-center text-danger text-uppercase">Users List</h1>
                    <a href="~/UserMaster/AddUser" class="btn btn-primary"><i class="fa fa-plus"></i></a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="file_export" class="table table-striped table-bordered display">
                            <thead class="bg-info">
                                <tr>
                                    <th class="text-white"><input type="checkbox" id="selectAll"> Select All</th>
                                    <th class="text-white">S. No.</th>
                                    <th class="text-white">Name</th>
                                    <th class="text-white">Email</th>
                                    @*<th class="text-white">Shop</th>*@
                                    <th class="text-white">Mobile</th>
                                    <th class="text-white">Role</th>
                                    <th class="text-white">Password</th>
                                    <th class="text-white">Ip Name</th>
                                    <th class="text-white">Ip Address</th>
                                    <th class="text-white">Login Date/Time</th>
                                    <th class="text-white"></th>
                                    <th class="text-white">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    if (Model.lst != null)
                                    {
                                        int i = 1;
                                        foreach (var Item in Model.lst)
                                        {
                                            <tr>
                                                <td><input type="checkbox" class="user-checkbox" value="@Item.id"></td>
                                                <td>@i</td>
                                                <td>@Item.fullname</td>
                                                <td>@Item.email</td>
                                                <td>@Item.mobile</td>
                                                <td>@Item.role</td>
                                                <td>@Item.password</td>
                                                <td>@Item.ipname</td>
                                                <td>@Item.ipadd</td>
                                                @*<td>@Item.IsActive</td>*@
                                                <td>@Item.logindate</td>
                                                <td>
                                                    @if (Item.isactive == true)
                                                    {
                                                        <apan style="color:lawngreen;"> Online </apan>
                                                    }
                                                    @if (Item.isactive == false)
                                                    {
                                                        <apan style="color:red;"> Offline </apan>
                                                    }
                                                </td>
                                                <td>
                                                    <a href="@Url.Action("AddUser", "UserMaster", new { c_id = Item.id })" class="btn btn-primary shadow btn-xs sharp me-1"><i class="fa fa-edit"></i></a>
                                                    <a href="/UserMaster/DeleteUser?id=@Item.id" class="btn btn-danger shadow btn-xs sharp" onclick="return confirm('Are you sure you wish to delete this User ?');"><i class="fa fa-trash"></i></a>
                                                </td>
                                            </tr>
                                            i = i + 1;
                                        }
                                    }
                                }
                            </tbody>

                        </table>
                        <button id="deleteSelectedUsers" disabled>Soft Delete Selected</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>$(document).ready(function () {
    $("#deleteSelectedUsers1").click(function () {
        var selectedIds = $(".user-checkbox:checked").map(function () {
            return $(this).val();
        }).get();

        if (selectedIds.length > 0) {
            $.ajax({
                url: "/UserMaster/SoftDeleteBulkUsers",
                type: "POST",
                data: { userIds: selectedIds }, // Ensure it’s sent as an array
                beforeSend: function () {
                    $("#deleteSelectedUsers").prop("disabled", true); // Disable button to prevent multiple clicks
                },
                success: function (response) {
                    if (response.success === true) {
                        alert("Users marked as deleted!");
                        location.reload(); // Reload to reflect changes
                    } else {
                        alert("Error updating users.");
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + error); // Handle unexpected errors
                },
                complete: function () {
                    $("#deleteSelectedUsers").prop("disabled", false); // Re-enable button after request
                }
            });
        } else {
            alert("Please select at least one user.");
        }
    });
});
</script>
<script>
    $(document).ready(function () {
        $("#deleteSelectedUsers").click(function () {
            var selectedIds = $(".user-checkbox:checked").map(function () {
                return $(this).val();
            }).get().join(",");

            if (selectedIds.length > 0) {
                $.ajax({
                    url: "/UserMaster/SoftDeleteBulkUsers",
                    type: "POST",
                    data: { userIds: selectedIds },
                    success: function (response) {
                        if (response.success==true) {
                            alert("Error updating users.");
                        } else {
                            alert("Users marked as deleted!");
                            location.reload();
                        }
                    }
                });
            } else {
                alert("Please select at least one user.");
            }
        });
    });

</script>
<script>
    $(document).ready(function () {
        // Function to enable/disable delete button
        function toggleDeleteButton() {
            if ($(".user-checkbox:checked").length > 0) {
                $("#deleteSelectedUsers").prop("disabled", false);
            } else {
                $("#deleteSelectedUsers").prop("disabled", true);
            }
        }

        // Event listener for checkbox changes
        $(".user-checkbox").change(function () {
            toggleDeleteButton();
        });

        // Initial check in case of pre-selected items
        toggleDeleteButton();
    });
</script>

<script>$(document).ready(function () {
        // Toggle checkboxes when "Select All" is clicked
        $("#selectAll").change(function () {
            $(".user-checkbox").prop("checked", $(this).prop("checked"));
            toggleDeleteButton();
        });

        // Enable/disable delete button based on checkbox selection
        $(".user-checkbox").change(function () {
            toggleDeleteButton();

            // If all checkboxes are checked, check "Select All" checkbox
            if ($(".user-checkbox:checked").length === $(".user-checkbox").length) {
                $("#selectAll").prop("checked", true);
            } else {
                $("#selectAll").prop("checked", false);
            }
        });

        // Function to enable/disable delete button
        function toggleDeleteButton() {
            if ($(".user-checkbox:checked").length > 0) {
                $("#deleteSelectedUsers").prop("disabled", false);
            } else {
                $("#deleteSelectedUsers").prop("disabled", true);
            }
        }
    });
</script>
